-->     APA ITU FORK
apa itu fork ? Fork adalah proses menyalin proyek repository orang lain ke repository pribadi.
kita bisa menggunakan fitur fork untuk menyalin public repository orang/organisasi lain ke dalam repository pribadi.

Fork bertindak sebagai jembatan antara repositori asli (original repository) dan repositori salinan (fork repository). Anda dapat menawarkan untuk menggabungkan perubahan yang telah Anda lakukan pada repositori salinan ke repositori asal untuk membantu membuat proyek orang lain lebih baik dengan melakukan pull request.

ketika Anda tidak memiliki akses pada sebuah public repository, Anda dapat melakukan beberapa tahap berikut agar dapat berkontribusi pada repository tersebut:
    - Melakukan fork atau menyalin suatu repository.
    - Melakukan perbaikan atau menambahkan perubahan.
    - Melakukan pull request agar perubahan dapat disetujui untuk digabungkan ke dalam repository asli.

Untuk mengintegrasikan fitur yang telah diubah oleh kontributor ke dalam repository utama, pengelola repository akan memeriksa dan mereviu untuk memastikan setiap perubahan yang ada dalam pull request tidak akan merusak proyek repository asli (original repository). Setelah merasa aman dengan perubahan tersebut, pengelola dapat menerima pull request yang dilakukan oleh kontributor. Sehingga, kontribusi yang telah dilakukan sekarang menjadi bagian dari proyek repository asli. Oleh karena itu, ketika ada developer lain yang ingin berkontribusi atau melakukan perubahan (pull-request), mereka harus melakukan menarik (fetch stream) perubahan dari repository asli untuk menyinkronkan repository mereka

-->     FORK VS CLONNING
apa bedanya fork dengan cloning? Keduanya memang sama-sama menyalin repository

Namun, perbedaannya terletak pada lokasi tujuan dari hasil salinan.
    - Ketika melakukan cloning dalam remote (contohnya GitHub), artinya Anda menyalin repository tersebut ke dalam local (Laptop/PC Anda).
    - Sedangkan ketika melakukan fork pada sebuah repository di GitHub, repository tersebut akan disalin ke dalam akun GitHub Anda.

Ketika Anda melakukan perubahan pada hasil salinan repositori, baik via clone maupun via fork, perubahan tersebut tidak akan memberikan efek kepada repositori asli (original repository). 

Jika menggunakan Fork, Anda perlu melakukan pull request antara fork repository dengan original repository. Sedangkan Clone, Anda perlu melakukan push agar perubahan dapat disimpan ke dalam remote repository (contohnya dalam GitHub). Namun, untuk clone, Anda tidak bisa melakukan push ke remote repository jika tidak memiliki akses. 

Ketika tidak mempunyai hak akses pada public repository, Anda perlu melakukan forking terlebih dahulu pada repository tersebut. Setelah mendapatkan fork repository (salinan original repository), Anda dapat melakukan cloning pada repository tersebut. Setelah itu, Anda dapat mulai melakukan perubahan pada local repository. Untuk mengimplementasikan perubahan pada local repository ke fork repository, Anda dapat menggunakan git push. Nah, karena saat ini kode/data dalam fork repository berbeda dengan original repository, Anda dapat mengimplementasikan perubahan ke original repository dengan pull request. Bagaimana alurnya? Seperti inilah bentuk hubungan antara fork dan clone

-->     FORK REPOSITORY
Sebelum melakukan perubahan pada public repository, semua kontributor yang tidak memiliki akses perlu melakukan fork pada repository tersebut

Perlu Anda tahu bahwa fork sejatinya seperti standar operasi git clone. Mengapa demikian? Sebab ketika Anda ingin melakukan fork pada GitHub, sebenarnya GitHub akan menyalin repository yang ada menggunakan alamat HTTPS atau URL SSH.

-->     TAHAPAN SINGKAT PROSES MENGELOLA PUBLIC REPOSITORY
- Menyalin repository oleh kontributor
- Melakukan perubahan oleh kontributor
- Melakukan pull request ke repositori asal (original repository) oleh kontributor
- Mengelola pull request yang masuk oleh admin atau pemilik akun
- Melihat perbedaan sebelum dan sesudah pull request dilakukan

-->     TAHAPAN DETAIL PROSES MENGELOLA PUBLIC REPOSITORY
1. Ketika ingin berkolaborasi pada public repository (open source), hal yang perlu Anda lakukan adalah menjalankan git fork atau menyalin repository tersebut. Menyalin sebuah repository milik organisasi atau orang lain (fork repository) sangatlah mudah.

2. Kemudian klik Fork untuk menyalin repository tersebut ke repository pribadi

3. Setelah berhasil melakukan fork, Anda dapat melakukan perubahan terhadap repository tersebut secara leluasa. Jumlah Watch, Star, Fork, dan Pull Request otomatis direset setelah Anda melakukan fork, hanya jumlah fork saja yang tidak ter-reset

4. Anda telah melakukan Pull request secara langsung pada repository asal. Hal itu bisa dilakukan karena Anda memiliki akses atau diundang menjadi salah satu kolaborator dalam repository tersebut. Karena saat ini kita tidak memiliki akses, Anda perlu melakukan pull request melalui fork.

5. Kemudian lakukan perubahan pada file di dalam repository pada branch main.

6. Setelah itu buat commit pada perubahan tersebut, dan lanjutkan membuat permintaan New pull request.

7. Anda akan diarahkan menuju halaman form pull request dari repository asal (original repository). Di sini kita akan membuat pull request untuk melakukan permintaan penggabungan antara fork repository menuju original repository (repositori asal).

Pilih compare main pada sebelah kanan (fork repository) dan pilih base main pada sebelah kiri (original repository). Pada bagian ini, Anda akan melihat berbagai perubahan yang dilakukan antara branch compare main (fork repository) dengan base main (original repository). Lanjutkan dengan klik Create pull request.

8. Masukkanlah commit message dan commit description pada form pull-request. Kemudian klik Create pull request

9. Jika perubahan pull request ingin direviu kodenya terlebih dahulu, klik bagian sebelah kanan, kemudian pilih siapa yang akan melakukan reviu terhadap pull request sebelum dilakukan merge.

10. Kita tidak dapat melakukan merge pull request karena pada repository asal (original repository) menerapkan reviu terlebih dahulu sebelum penggabungan dilakukan. Setelah pengelola repository (baik pemilik maupun anggota tim yang memiliki hak akses) melakukan reviu, mereka dapat menjalankan perintah merge untuk menggabungkan perubahan tersebut.

11. bagaimana cara mengelola pull request dari sisi pemilik repository atau kolaborator yang memiliki hak akses?

Katakanlah Anda saat ini menjadi pemilik/pengelola dari repositori asli (Original repository). Kemudian masuk ke halaman Pull requests dengan akun tersebut. Saat ini, terlihat ada satu permintaan perubahan/pull request yang dilakukan oleh kontributor.

12. Biasanya seorang pengelola akan melakukan reviu pada pull request sebelum menjalankan merge ke branch utama. Setelah melakukan review, Anda bisa menekan Merge pull request untuk memulai penggabungan.

13. Setelah melakukan review, masukkanlah commit description dalam Pull Request (PR) tersebut. Sebelum melakukan pull request, klik Use your administrator privileges to merge this pull request,. Fitur ini merupakan hak prerogatif yang dimiliki pengelola atau hak administrator untuk menggabungkan sebuah pull request. Jika sudah, klik Confirm merge untuk melanjutkan merge

14. Pastikan merge berhasil dilakukan dengan cara cek branch main di repository asal (original repository). Seperti inilah perbandingan antara repositori asal (original repository) dengan repositori salinan (fork repository) setelah perintah merge berhasil dijalankan melalui Pull requests.

15. Selamat. Anda telah memahami cara menyalin repository dengan fork dan melakukan perubahan dalam repositori salinan (fork repository) menggunakan pull request.