Apa itu Style Guide? Style Guide merupakan kumpulan peraturan mengenai bagaimana cara penulisan kode yang baik bagi developer secara individu maupun tim. Pada style guide tertulis secara lengkap aturan yang harus diikuti oleh developer. Seperti penggunaan double atau single quote, indentasi, semicolon, penamaan variabel, dan lainnya

menulis kode dengan struktur yang bagus adalah sesuatu yang penting dan salah satu kewajiban utama setiap developer

Perusahaan juga menginginkan kode dengan kualitas terbaik dan mampu menjadi pendukung bisnis. Salah satu indikatornya adalah Anda dapat melakukan perubahan dengan mudah pada aplikasi saat terdapat fitur baru. Selain itu, perusahaan dapat melakukan upaya (effort) seminimal mungkin untuk beradaptasi dengan kebutuhan bisnisnya.

Masalahnya banyak developer pemula yang mengabaikan kualitas kode mereka. Mereka hanya memperhatikan apakah fitur-fitur pada aplikasi bisa berjalan atau tidak. Akibatnya kode yang mereka tulis terkesan asal-asalan, contohnya mengandung duplikasi kode, memiliki management kodenya/struktur yang berantakan, dan tak mengindahkan aspek penulisan kode alias ala kadarnya. Intinya, yang penting semua fitur aplikasi bisa jalan. Ya, mungkin tampak luar aplikasi akan terlihat baik, tapi tunggu dulu. Sebenarnya, secara kode itu sangat ringkih.

Lalu bagaimana caranya menulis kode dengan bersih (clean code)? Atau, bagaimana cara menulis kode agar bisa bertahan, walaupun fiturnya terus bertambah (scalable)? Jawabannya adalah Anda harus memiliki rasa tanggung jawab lebih pada tiap baris kode yang Anda tulis. Caranya mudah kok, pastikan kode yang Anda tulis mudah dipahami oleh orang lain. Jadi, bukan hanya kamu dan Tuhan saja yang memahaminya ya.

Kode yang baik tak hanya mudah dibaca oleh komputer saja, namun mudah dibaca oleh manusia. Kenapa demikian? Sadari bahwa saat membangun aplikasi, Anda tak hanya memenuhi kebutuhan pengguna semata. Alih-alih, tanggung jawab seorang developer juga meliputi kebutuhan anggota tim lain. Pada akhirnya, kode yang Anda tulis itu tak hanya membuat pengguna aplikasimu bahagia, melainkan rekan kerjamu juga.

Style guide yang sudah disepakati dan direkomendasikan oleh banyak developer itulah yang disebut dengan Code Convention, konvensi penulisan kode. Tentunya setiap bahasa pemrograman memiliki berbagai referensi style guide terkenal yang direkomendasikan untuk Anda ikuti. Dalam bahasa Javascript, Anda dapat mengikuti style guide dari AirBNB JavaScript, Google JavaScript, dan Standard JavaScript

-->         PENTINGNYA PENGGUNAAN STYLE GUIDE
Berikut alasannya mengapa style guide penting dan perlu diperhatikan oleh para pengembang software :
    1. konsisten
        - Pertama adalah konsistensi. Ini merupakan hal yang mendasar dan diperlukan ketika menulis kode, terutama jika bekerja dengan tim. Mengapa demikian? Karena selain membuat kode terlihat rapi, rekan tim juga akan lebih mudah ketika membacanya. Ingat, kode yang baik adalah yang bisa dipahami orang lain.

    2. Membantu proses onboarding
        - Tidak hanya konsistensi, style guide juga dapat membantu proses onboarding, seperti saat ada anggota baru dalam tim. Terutama bila ia masih tergolong junior. Dengan adanya style guide, ia akan mampu beradaptasi dan belajar lebih cepat.

    3. Menambah wawasan
        - Kemudian dengan mengikuti style guide, Anda akan menemukan wawasan baru. Contohnya, banyak style guide yang menerapkan koma pada item terakhir dalam array, dan di sana kita menemukan alasan mengapa hal tersebut diperlukan.

    4. Membantu proses code review
        - style guide juga dapat membantu proses code review dengan memberitahu gaya yang digunakan dalam menuliskan kode. Workflow dalam membangun produk yang baik tentu terdapat proses code review. Dengan begitu tidak akan terjadi banyak perdebatan pada proses code review.

Dengan mengikuti style guide, anda akan dapat beberapa keuntungan seperti : 
    1. memahami dan membaca kode jadi lebih mudah
    2. kode jadi lebih mudah untuk dipelihara
    3. mengurangi kesalahan pengembang software yang sering terjadi
    4. mengurangi beban secara kognitif saat membuat kode
    5. menjadi lebih fokus pada permasalahan logika kode dibandingkan style nya saat berdiskusi dengan rekan kerja anda
