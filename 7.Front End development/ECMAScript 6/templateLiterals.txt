ES6 menawarkan kemudahan bagi developer dalam mengelola nilai string. Sebelum ES6, cara lama dalam menggabungkan nilai string adalah dengan menggunakan operator (+).

const user = {
  firstName: 'Dimas',
  lastName: 'Saputra',
  age: 18,
};
 
console.log('Nama: ' + user.firstName + ' ' + user.lastName + ', Umur: ' + user.age);
 
/* Output:
Nama: Dimas Saputra, Umur: 18
*/

Mungkin hal tersebut tidak terlalu repot, tapi jika dalam proses penggabungan tersebut terdapat baris baru, ini jadi sangat merepotkan.

const user = {
  firstName: 'Dimas',
  lastName: 'Saputra',
  age: 18,
};
 
const admin = {
  name: 'Jane',
  position: 'Marketing',
};
 
const message = 'Dear, ' + user.firstName + ' ' + user.lastName + '\n\n' +
    'Selamat ulang tahun yang ke-' + user.age + ' semoga selalu diberikan kesehatan.' + '\n\n' +
    'Best Regards,\n' +
    admin.name + '\n' +
    admin.position;
 
console.log(message);
 
/* Output:
Dear, Dimas Saputra
 
Selamat ulang tahun yang ke-18 semoga selalu diberikan kesehatan.
 
Best Regards,
Jane
Marketing
*/

Jangan khawatir karena ada template literals yang mampu menyederhanakan proses tersebut. Bagaimana menggunakannya? Gunakanlah tanda backticks (`) untuk menggantikan tanda single quotes (‘) atau double quotes (“) yang digunakan sebelumnya. Template literals juga dapat mengandung sebuah expression dengan menuliskannya di dalam tanda ${expression}. Hal ini sungguh membantu sekali dalam pembuatan nilai string yang kompleks menjadi jauh lebih mudah

const user = {
  firstName: 'Dimas',
  lastName: 'Saputra',
  age: 18,
};
 
console.log(`Nama: ${user.firstName} ${user.lastName}, Umur: ${user.age}`);
 
/* Output:
Nama: Dimas Saputra, Umur: 18
*/

Template literals juga dapat membaca line space secara langsung tanpa harus menggunakan escape character. 

