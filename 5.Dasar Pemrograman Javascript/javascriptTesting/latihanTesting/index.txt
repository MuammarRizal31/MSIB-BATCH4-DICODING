Dari proyek sebelumnya, kita akan coba untuk memulai pengenalan format sederhana saat kita akan menuliskan sebuah test. Perhatikan kode di bawah ini.

test('deskripsi dari testcase kamu', () => {
    expect(perintah).matcher(nilai yang diekspektasikan);
});
 
// contoh
test('dua tambah dua adalah empat', () => {
    expect(2+2).toBe(4);
});

Dari contoh kode di atas expect(2 + 2) merupakan segmen yang berisi perintah yang menghasilkan nilai balikan, perintah tersebut dapat berupa fungsi ataupun perintah langsung.

toBe(4) disebut dengan matcher, berisi nilai yang diharapkan dari sebuah perintah yang dilakukan sebelumnya. Dalam jest sendiri terdapat berbagai matchers yang dapat digunakan, misalkan:
 
toBe(x)      --> bahwa nilai ekspektasi yang diharapkan adalah x
toEqual(x)   --> bahwa nilai ekspektasi yang diharapkan sama dengan x
toBeNull()   --> bahwa nilai ekspektasi yang diharapkan adalah null
toBeTruthy() --> bahwa nilai ekspektasi yang diharapkan adalah truth
toBeFalsy()  --> bahwa nilai ekspektasi yang diharapkan adalah false

Selain matchers di atas, Anda juga dapat melihat matcher lain yang dapat digunakan di sini https://jestjs.io/docs/using-matchers.

Pada framework jest, kita juga dapat menuliskan sebuah test secara grouping berdasarkan karakteristik ataupun grup yang sama menggunakan segmen describe , misalkan sebagai berikut

describe('pengujian olah aritmatika', () => {
   test('#1 dua tambah dua adalah empat', () => {
        expect(2+2).toBe(4);
   });
 
   test('#2 dua kali tiga adalah enam', () => {
        expect(2*3).toBe(6);
   });
});


