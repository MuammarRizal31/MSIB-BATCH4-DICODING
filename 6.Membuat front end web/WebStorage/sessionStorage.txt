SESSION STORAGE
Tipe storage yang kedua adalah session storage yang digunakan untuk menyimpan data sementara pada browser. data akan hilang ketika browser atau tab browser ditutup.

untuk menerapkan session storage, kita dapat menggunakan global objek sessionStorage. method method yang tersedia sama dengan milik localStorage. kemudian untuk menyimpan data gunakan method setItem() mengakses data yang sudah dimasukkan dapat menggunakan method getItem() dan untuk menghapus item gunakan method removeItem().

<!DOCTYPE html>
<html>
<head>
  <title>Web Storage World</title>
  <style>
    .contents {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border: 2px solid black;
      padding: 15px;
    }
    
    #generateButton {
      margin-top: 5px;
      margin-bottom: 15px;;
    }
  </style>
</head>
<body>
<div class="contents" align="center">
  <h1>Session Storage</h1>
  <button id="incrementButton">Tambah nilai</button>
  <button id="clear">Hapus storage</button>
  <h3>Kamu sudah menekan tombol di atas sebanyak:</h3>
  <h2 id="count">0</h2>
</div>
 
<script>
  const sessionStorageKey = 'PRESS_FREQUENCY';
  
  // pengecekan apakah data sessionStorage dengan key count tersedia atau belum
  if (typeof (Storage) !== 'undefined') {
    if (sessionStorage.getItem(sessionStorageKey) === null) {
      // Jika item pada session storage belum ada
      // maka akan atur dengan nilai awal yakni 0
      sessionStorage.setItem(sessionStorageKey, 0);
    }
    
    const Incrementbutton = document.querySelector('#incrementButton');
    const clearButton = document.querySelector('#clear');
    const countDisplay = document.querySelector('#count');
    
    // memberikan nilai item dari session storage
    countDisplay.innerText = sessionStorage.getItem(sessionStorageKey);
    
    // mengupdate nilai dari item session storage jika tombol ditekan
    Incrementbutton.addEventListener('click', function () {
      let count = sessionStorage.getItem(sessionStorageKey);
      count++;
      sessionStorage.setItem(sessionStorageKey, count);
      countDisplay.innerText = sessionStorage.getItem(sessionStorageKey);
    });
    
    // memberikan nilai 0 ke tampilan karena di-reset dan menghapus item
    clearButton.addEventListener('click', function () {
      sessionStorage.removeItem(sessionStorageKey);
      countDisplay.innerText = 0;
    });
  } else {
    alert('Browser yang Anda gunakan tidak mendukung Web Storage');
  }
</script>
</body>
</html>


bisa kita lihat bahwa data yang tersimpan dalam session storage akan bertahan jika terjadi reload/refresh pada browser. namun, data tersebut akan hilang apabila tab broser atau broser itu sendiri ditutup