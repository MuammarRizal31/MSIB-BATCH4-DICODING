<!DOCTYPE html>
<html>
  <head>
    <title>Web Storage Game</title>
    <style>
      hr {
        height: 2px;
        color: black;
        background-color: black;
        width: 95%;
      }

      li {
        margin-top: 1%;
        margin-bottom: 1%;
        font-size: 120%;
      }

      .contents {
        margin-left: 5%;
        margin-right: 5%;
      }

      .child-content {
        border: 2px solid black;
        padding-bottom: 2%;
        margin-bottom: 1%;
      }

      .button {
        padding-left: 1%;
        padding-right: 1%;
        font-size: 140%;
      }

      .answer-button {
        margin-left: 2%;
        margin-right: 2%;
        padding: 2%;
        font-size: 140%;
        width: 12%;
      }

      #total-stats {
        float: right;
        width: 40%;
        height: 50%;
      }

      #gameboard {
        float: left;
        width: 55%;
        height: 40%;
      }

      #session-stats {
        float: left;
        margin-top: 1%;
        width: 55%;
      }

      #instructions {
        float: right;
        margin-top: 1%;
        width: 40%;
      }

      #instructions-list {
        margin-left: 1%;
        margin-right: 1%;
      }
    </style>
  </head>
  <body align="center">
    <h1 align="center">Permainan Tebak Angka '123'</h1>
    <div class="contents">
      <div class="child-content" id="total-stats" align="center">
        <h2>Local Stats</h2>
        <hr />
        <div id="all-local-stats">
          <div class="local-stat-item">
            <h3>Jumlah permainan yang berhasil dimenangkan:</h3>
            <h3 id="local-total-victory-field"></h3>
          </div>
          <div class="local-stat-item">
            <h3>Jumlah tebakan salah terbanyak sekali main:</h3>
            <h3 id="local-maximum-attempt-field"></h3>
          </div>
          <button class="button" id="destroy-data-button">Hapus semua data</button>
        </div>
      </div>

      <div class="child-content" id="gameboard" align="center">
        <h2>Game Board</h2>
        <hr />
        <div id="before-game-display">
          <h3>Tekan tombol "Play" di bawah jika sudah siap</h3>
          <button class="button" id="play-button">Bermain</button>
        </div>
        <div id="during-game-display" hidden>
          <h3>Silahkan menebak angka!</h3>
          <h3>Jawaban Anda:</h3>
          <h1>
            "<u><span id="session-user-answer-field"></span></u>"
          </h1>
          <button class="answer-button" id="answer-1-button">1</button>
          <button class="answer-button" id="answer-2-button">2</button>
          <button class="answer-button" id="answer-3-button">3</button>
          <h3>"<span id="session-user-wrong-answer-field"></span>" bukanlah jawabannya...</h3>
          <br /><br />
        </div>
        <div id="after-game-display" hidden>
          <h3>Selamat Tebakan Anda benar!</h3>
          <h3>Jawabannya adalah:</h3>
          <h1>"<span id="session-true-answer-field"></span>"</h1>
          <h3><i></i>Refresh halaman ini untuk mencoba lagi</h3>
        </div>
      </div>

      <div class="child-content" id="session-stats" align="center">
        <h2>Game Session Stats</h2>
        <hr />
        <div id="all-session-stats">
          <div class="session-stat-item">
            <h3>Jumlah Tebakan Salah:</h3>
            <h3 id="session-user-attempts-amount-field"></h3>
          </div>
        </div>
      </div>

      <div class="child-content" id="instructions">
        <h2 align="center">Cara bermain</h2>
        <hr />
        <h3 align="center">Selamat datang ke permainan tebak angka, berikut instruksi-nya:</h3>
        <ul id="instructions-list" align="left">
          <li>Anda harus mencari kombinasi angka yang terdiri dari angka "1", "2", dan "3", misalnya "231" dan "123".</li>
          <li>Angka yang ditebak hanya memiliki panjang 3 karakter saja, sehingga kombinasi seperti "1231" tidak akan menjadi jawaban.</li>
          <li>Sebuah angka hanya akan muncul sekali dan hanya sekali, sehingga kombinasi seperti "223" maupun "111" tidak akan menjadi jawaban.</li>
          <li><i>Have fun and don't cheat!</i></li>
        </ul>
      </div>
    </div>

    <script>
      //inisialiasi variabel untuk menampung elemen dokumen
      const localTotalVictoryField = document.getElementById("local-total-victory-field");
      const localMaximumAttemptField = document.getElementById("local-maximum-attempt-field");
      const destroyDataButton = document.getElementById("destroy-data-button");
      const playButton = document.getElementById("play-button");
      const beforeGameDisplay = document.getElementById("before-game-display");
      const duringGameDisplay = document.getElementById("during-game-display");
      const afterGameDisplay = document.getElementById("after-game-display");
      const answerButton1 = document.getElementById("answer-1-button");
      const answerButton2 = document.getElementById("answer-2-button");
      const answerButton3 = document.getElementById("answer-3-button");
      const sessionUserAnswerField = document.getElementById("session-user-answer-field");
      const sessionUserWrongAnswerField = document.getElementById("session-user-wrong-answer-field");
      const sessionTrueAnswerField = document.getElementById("session-true-answer-field");
      const sessionUserAttemptsField = document.getElementById("session-user-attempts-amount-field");

      //inisialisasi fungsi untuk menghasilkan jawaban permainan
      function getAnswer() {
        let answer = "123".split("");
        for (let i = 0; i < answer.length; i++) {
          let j = Math.floor(Math.random() * (i + 1));
          let tmp = answer[i];
          answer[i] = answer[j];
          answer[j] = tmp;
        }
        return answer.join("");
      }

      //inisialiasi key untuk session storage
      const sessionAnswerKey = "SESSION_ANSWER";
      const sessionUserAttemptsKey = "SESSION_USER_ATTEMPTS";
      const sessionUserIsPlayingKey = "SESSION_USER_IS_PLAYING";

      //inisialisasi key untuk local storage
      const localTotalVictoryKey = "LOCAL_TOTAL_VICTORIES_PLAYED";
      const localMaximumAttemptsKey = "LOCAL_MAXIMUM_ATTEMPTS";
    </script>
  </body>
</html>


didalam element <script>, sudah terdapat beberapa kode antara lain : 
    - variable-variable yang bisa kit gunakan untuk berinteraksi dengan dom
    - sebuah fungsi getAnswer() yang berfungsi untuk menghasilkan kombinasi dari angka '1','2','3'.kombinasi tersebut akan menjadi jawaban untuk permainan tebak angka.
    - variable-variable yang menampung key untuk session storage maupun local storage.
 
untuk membuat item pada session storage maupun local storage, kita bisa menggunakan method setItem() dari masing masing jenis storage.

//untuk session storage
sessionStorage.setItem(<namakey>,<nilaiAwal>);

// untuk local storage
localStorage.setItem(<namaKey>,<nilaiAwal>)

dair berkas HTML diatas, kita sudah menambahkan key yang digunakan untuk mengakses item terlebih dahulu pada session storage maupun local storage.

selanjutnya mari kita tambahkan sebuah event listener(load) pada objek window. sehingga, ketika berkas HTML sudah selesai ditampilkan, kita akan mengecek apakah item pada session storage maupun local storage sudah dibuat atau belum" 


window.addEventListener('load', function () {
  if (typeof (Storage) !== 'undefined') {
    // inisialisasi semua item web storage yang kita akan gunakan jika belum ada
    if (sessionStorage.getItem(sessionAnswerKey) === null) {
      sessionStorage.setItem(sessionAnswerKey, '');
    }
    if (sessionStorage.getItem(sessionUserAttemptsKey) === null) {
      sessionStorage.setItem(sessionUserAttemptsKey, 0);
    }
    if (sessionStorage.getItem(sessionUserIsPlayingKey) === null) {
      sessionStorage.setItem(sessionUserIsPlayingKey, false);
    }
    if (localStorage.getItem(localTotalVictoryKey) === null) {
      localStorage.setItem(localTotalVictoryKey, 0);
    }
    if (localStorage.getItem(localMaximumAttemptsKey) === null) {
      localStorage.setItem(localMaximumAttemptsKey, 0);
    }
  } else {
    alert('Browser yang Anda gunakan tidak mendukung Web Storage');
  }
});

kode diatas dimulai dari proses memeriksa apakah browser yang digunakan mendukung fitur web storage. jika tidak, ia akan menampilkan sebuah alert dialog box. sedangkan jika browser mendukung fitur web storage, kode javascript akan mengecek apakah setiap item ada atau tidak. jika blum ada,buat item dengan memanggil sessionStorage.setItem() untuk session storage dan localStorage.setItem() untuk local storage.
 
untuk mengakses item pada session storage maupun local storage, kita bisa menggunakan method getItem() dari masing masing jenis storage: 
    //untuk session storage
    sessionStorage.getItem(<namakey>);

    //untuk local storage
    localStorage.getItem(<namaKey>)

kita akan menggunakan method tersebut untuk mengakses item storage yang sudah dibuat pada materi sebelumnya dan menampilkannya dihalaman web.

jika dilihat dari tampilan halaman web permainan tebak angka saat ini, disana tidak ada nilai awal dari stats pada game session stats dan local stats dilokasi yang ditandai dengan tanda tanya (?)

Dalam fungsi addEventListener milik objek window untuk event "load" yang sudah dibuat sebelumnya, kita bisa menambahkan beberapa baris kode di bagian akhir fungsi seperti berikut:

    sessionUserAttemptsField.innerText = sessionStorage.getItem(sessionUserAttemptsKey);
    localTotalVictoryField.innerText = localStorage.getItem(localTotalVictoryKey);
    localMaximumAttemptField.innerText = localStorage.getItem(localMaximumAttemptsKey);

kode diatas akan menampilkan nilai yang tersimpan pada item session storage untuk elemen stats pada game session stats dan item local storage untuk elemen stats pada local stats. sehingga, stats akan menampilkan nilai yang tersimpan pada masing masing item storage ketika halaman web ditampilkan

sekarang fungsi addEventListener milik objek window untuk event load memiliki isi sebagai berikut : 


dapat dilihat nilai elemen dari jumlah tebakan salah jumlah kombinasi yang berhasil ditebak dan jumlah tebakan salah terbanyak sekali main memiliki nilai awal 0.nilai 0 tersebut sudah sesuai dengan nilai yang kita masukkan kemasing masing item storage yang telah dibuat pada materi sebelumnya

sejauh ini kita sudah berhasil menambahkan beserta mengakses data yang tersimpan dalam item storage. namun, bagaimana jika sebuah event terjadi ketika nilai data pada sebuah item storage harus diganti ? hal tersebut akan kita pelajari dimateri berikutnya tentang cara mengakses sebuah item storage dan mengubah nilainya